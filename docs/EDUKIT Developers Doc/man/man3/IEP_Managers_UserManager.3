.TH "UserManager" 3 "Вс 17 Сен 2017" "Version 1.0" "EDUKIT Developers" \" -*- nroff -*-
.ad l
.nh
.SH NAME
UserManager \- Менеджер для работы с пользователями  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include 'iep/managers/um\&.class\&.php'\fP
.PP
Базовые классы:\fBIEP\fP\&.
.SS "Открытые члены"

.in +1c
.ti -1c
.RI "\fBadminExists\fP (\fBUser\fP $user)"
.br
.RI "Проверяет, существует ли такой администратор в базей данных "
.ti -1c
.RI "\fBuserExists\fP (\fBUser\fP $user)"
.br
.RI "Проверяет, существует ли такой пользователь в базей данных "
.ti -1c
.RI "\fBadd\fP ($user)"
.br
.RI "Добавляет нового пользователя "
.ti -1c
.RI "\fBauthentification\fP (string $email, string $passwd)"
.br
.RI "Производит аутентификацию пользователя "
.ti -1c
.RI "\fBauthentificationAdmin\fP (string $email, string $passwd)"
.br
.RI "Производит аутентификацию администратора "
.ti -1c
.RI "\fBgetAllAdmins\fP ()"
.br
.RI "Возвращает всех администраторов "
.ti -1c
.RI "\fBgetAllUsers\fP ()"
.br
.RI "Возвращает всех пользователей "
.ti -1c
.RI "\fBgetAllStudents\fP ()"
.br
.RI "Возвращает всех студентов "
.ti -1c
.RI "\fBgetAllTeachers\fP ()"
.br
.RI "Возвращает всех преподавателей "
.ti -1c
.RI "\fBgetAllParents\fP ()"
.br
.RI "Возвращает всех родителей "
.ti -1c
.RI "\fBgetAllElders\fP ()"
.br
.RI "Возвращает всех старост "
.ti -1c
.RI "\fBgetAllStudentsElders\fP ()"
.br
.RI "Возвращает всех студентов и старост "
.ti -1c
.RI "\fBgrantElder\fP (string $student_email)"
.br
.RI "Назначает старосту "
.ti -1c
.RI "\fBrevokeElder\fP (string $student_email)"
.br
.RI "Разжаловает старосту "
.ti -1c
.RI "\fBsetChild\fP (string $parent_email, string $student_email, int $relation)"
.br
.RI "Назначает детей родителю "
.ti -1c
.RI "\fBunsetChild\fP (string $parent_email, string $student_email)"
.br
.RI "Убирает детей от родителя "
.ti -1c
.RI "\fBsetSubject\fP (string $teacher_email, int $subject_id)"
.br
.RI "Назначает предмет преподавателю "
.ti -1c
.RI "\fBunsetSubject\fP (string $teacher_email, int $subject_id)"
.br
.RI "Убирает предмет у преподавателя "
.ti -1c
.RI "\fBchangeUserPassword\fP (string $user_email, string $old_passwd, string $new_passwd)"
.br
.RI "Изменяет пароль пользователя "
.ti -1c
.RI "\fBremove\fP ($user_email)"
.br
.RI "Удаляет пользователя "
.ti -1c
.RI "\fBremoveAdmin\fP (string $admin_email)"
.br
.RI "Удаляет администратора "
.in -1c
.SH "Подробное описание"
.PP 
Менеджер для работы с пользователями 


.PP
\fBАвтор:\fP
.RS 4
pmswga 
.RE
.PP
\fBВерсия:\fP
.RS 4
1\&.0 
.RE
.PP

.SH "Методы"
.PP 
.SS "add ( $user)"

.PP
Добавляет нового пользователя 
.PP
\fBАргументы:\fP
.RS 4
\fI$user\fP - Новый пользователь 
.RE
.PP
\fBЗаметки:\fP
.RS 4
Объект класса User 
.RE
.PP

.SS "adminExists (\fBUser\fP $user)"

.PP
Проверяет, существует ли такой администратор в базей данных 
.PP
\fBАргументы:\fP
.RS 4
\fI$user\fP - администратор 
.RE
.PP
\fBЗаметки:\fP
.RS 4
Объект класса User 
.RE
.PP
\fBВозвращает:\fP
.RS 4
TRUE - успешно, FALSE - ошибка 
.RE
.PP

.SS "authentification (string $email, string $passwd)"

.PP
Производит аутентификацию пользователя 
.PP
\fBАргументы:\fP
.RS 4
\fI$email\fP - Электронная почта пользователя 
.br
\fI$passwd\fP - Пароль 
.RE
.PP
\fBВозвращает:\fP
.RS 4
FALSE - пользователь не существует, объект класса User - пользователь существует 
.RE
.PP

.SS "authentificationAdmin (string $email, string $passwd)"

.PP
Производит аутентификацию администратора 
.PP
\fBАргументы:\fP
.RS 4
\fI$email\fP - Электронная почта администратора 
.br
\fI$passwd\fP - Пароль 
.RE
.PP
\fBВозвращает:\fP
.RS 4
FALSE - пользователь не существует, объект класса User - пользователь существует 
.RE
.PP

.SS "changeUserPassword (string $user_email, string $old_passwd, string $new_passwd)"

.PP
Изменяет пароль пользователя 
.PP
\fBАргументы:\fP
.RS 4
\fI$user_email\fP - Электронная почта пользователя 
.br
\fI$old_passwd\fP - Старый пароль 
.br
\fI$new_passwd\fP - Новый пароль 
.RE
.PP
\fBВозвращает:\fP
.RS 4
TRUE - успешно, FALSE - ошибка 
.RE
.PP

.SS "getAllAdmins ()"

.PP
Возвращает всех администраторов 
.PP
\fBВозвращает:\fP
.RS 4
Администраторы 
.RE
.PP
\fBЗаметки:\fP
.RS 4
Массив с объектами класса User 
.RE
.PP

.SS "getAllElders ()"

.PP
Возвращает всех старост 
.PP
\fBВозвращает:\fP
.RS 4
Старосты 
.RE
.PP
\fBЗаметки:\fP
.RS 4
Массив с объектами класса Student 
.RE
.PP

.SS "getAllParents ()"

.PP
Возвращает всех родителей 
.PP
\fBВозвращает:\fP
.RS 4
Родители 
.RE
.PP
\fBЗаметки:\fP
.RS 4
Массив с объектами класса Parent_ 
.RE
.PP

.SS "getAllStudents ()"

.PP
Возвращает всех студентов 
.PP
\fBВозвращает:\fP
.RS 4
Студенты 
.RE
.PP
\fBЗаметки:\fP
.RS 4
Массив с объектами класса Student 
.RE
.PP

.SS "getAllStudentsElders ()"

.PP
Возвращает всех студентов и старост 
.PP
\fBВозвращает:\fP
.RS 4
Студенты и старосты 
.RE
.PP
\fBЗаметки:\fP
.RS 4
Массив с объектами класса Student 
.RE
.PP

.SS "getAllTeachers ()"

.PP
Возвращает всех преподавателей 
.PP
\fBВозвращает:\fP
.RS 4
Преподаватели 
.RE
.PP
\fBЗаметки:\fP
.RS 4
Массив с объектами класса Teacher 
.RE
.PP

.SS "getAllUsers ()"

.PP
Возвращает всех пользователей 
.PP
\fBВозвращает:\fP
.RS 4
Пользователи 
.RE
.PP
\fBЗаметки:\fP
.RS 4
Массив с объектами класса User 
.RE
.PP

.SS "grantElder (string $student_email)"

.PP
Назначает старосту 
.PP
\fBАргументы:\fP
.RS 4
\fI$student_email\fP - Электронная почта студента 
.RE
.PP
\fBВозвращает:\fP
.RS 4
TRUE - успешно, FALSE - ошибка 
.RE
.PP

.SS "remove ( $user_email)"

.PP
Удаляет пользователя 
.PP
\fBАргументы:\fP
.RS 4
\fI$user_email\fP - почта пользователя 
.RE
.PP
\fBВозвращает:\fP
.RS 4
TRUE - успешно, FALSE - ошибка 
.RE
.PP

.SS "removeAdmin (string $admin_email)"

.PP
Удаляет администратора 
.PP
\fBАргументы:\fP
.RS 4
\fI$admin_email\fP - почта пользователя 
.RE
.PP
\fBВозвращает:\fP
.RS 4
TRUE - успешно, FALSE - ошибка 
.RE
.PP

.SS "revokeElder (string $student_email)"

.PP
Разжаловает старосту 
.PP
\fBАргументы:\fP
.RS 4
\fI$student_email\fP - Электронная почта студента 
.RE
.PP
\fBВозвращает:\fP
.RS 4
TRUE - успешно, FALSE - ошибка 
.RE
.PP

.SS "setChild (string $parent_email, string $student_email, int $relation)"

.PP
Назначает детей родителю 
.PP
\fBАргументы:\fP
.RS 4
\fI$parent_email\fP - Электронная почта родителя 
.br
\fI$student_email\fP - Электронная почта студента 
.br
\fI$relation\fP - Тип отношения 
.RE
.PP
\fBВозвращает:\fP
.RS 4
TRUE - успешно, FALSE - ошибка 
.RE
.PP

.SS "setSubject (string $teacher_email, int $subject_id)"

.PP
Назначает предмет преподавателю 
.PP
\fBАргументы:\fP
.RS 4
\fI$teacher_email\fP - Электронная почта родителя 
.br
\fI$subject_id\fP - Идентификатор предмета 
.RE
.PP
\fBВозвращает:\fP
.RS 4
TRUE - успешно, FALSE - ошибка 
.RE
.PP

.SS "unsetChild (string $parent_email, string $student_email)"

.PP
Убирает детей от родителя 
.PP
\fBАргументы:\fP
.RS 4
\fI$parent_email\fP - Электронная почта родителя 
.br
\fI$student_email\fP - Электронная почта студента 
.RE
.PP
\fBВозвращает:\fP
.RS 4
TRUE - успешно, FALSE - ошибка 
.RE
.PP

.SS "unsetSubject (string $teacher_email, int $subject_id)"

.PP
Убирает предмет у преподавателя 
.PP
\fBАргументы:\fP
.RS 4
\fI$teacher_email\fP - Электронная почта родителя 
.br
\fI$subject_id\fP - Идентификатор предмета 
.RE
.PP
\fBВозвращает:\fP
.RS 4
TRUE - успешно, FALSE - ошибка 
.RE
.PP

.SS "userExists (\fBUser\fP $user)"

.PP
Проверяет, существует ли такой пользователь в базей данных 
.PP
\fBАргументы:\fP
.RS 4
\fI$user\fP - пользователь 
.RE
.PP
\fBЗаметки:\fP
.RS 4
Объект класса User 
.RE
.PP
\fBВозвращает:\fP
.RS 4
TRUE - успешно, FALSE - ошибка 
.RE
.PP


.SH "Автор"
.PP 
Автоматически создано Doxygen для EDUKIT Developers из исходного текста\&.
